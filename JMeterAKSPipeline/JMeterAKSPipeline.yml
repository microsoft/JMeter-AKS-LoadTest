parameters:
  - name: IsMultiRegionEnabled
    type: boolean
    default: false

  - name: IsClusterRequired
    type: boolean
    default: false

  - name: JmeterFolderPath
    type: string
    default: JMeterFiles

  - name: JmeterFileName
    type: string
    default: SampleTestPlan.jmx

  - name: Threads
    type: number
    default: 10

  - name: Duration
    type: number
    default: 300

  - name: Loops
    type: number
    default: 3

  - name: RampUpTime
    type: number
    default: 10

variables:
  TenantId: "72f988bf-86f1-41af-91ab-2d7cd011db47"
  Namespace: "shdeb-aks-xj87"
  ServiceConnection: "perf-aks-access"
  KeyVaultName: "dip-perf-execution-kv"
  SecretNames: "AKSSPNClientSecret, PerfTestClientSecret"
  AKSResourceGroup: "modiot-ci-perf"
  AKSSPNClientId: "09f10d7d-81bf-470d-be10-279f9ef2c35a"
  AKSClusterNameRegion1: "A"
  AKSClusterNameRegion2: "B"
  PerfTestResourceId: "7958bbb1-374c-4b08-808d-5491c21c7f91"
  PerfTestClientId: "e706c546-fbac-4bdc-b432-a520489d53b4"
  CSVFileNames: "users.csv"

jobs:
  - job: Region_1
    displayName: Performance Agent Instance 1
    steps:
      - checkout: self

      - task: AzureKeyVault@1
        displayName: Get Keyvault Secrets
        inputs:
          azureSubscription: $(ServiceConnection)
          KeyVaultName: $(KeyVaultName)
          SecretsFilter: $(SecretNames)
          RunAsPreJob: true

      - task: PowerShell@2
        displayName: Create AKS Cluster
        inputs:
          targetType: filePath
          filePath: ./JMeterAKSPipeline/CreateAksCluster.ps1
          arguments: "-AKSClusterName $(AKSClusterNameRegion1)"
        condition: "and(succeeded(), eq('${{ parameters.IsClusterRequired }}', true))"

      - task: PowerShell@2
        displayName: Update JMX File Parameters
        inputs:
          targetType: inline
          script: "# Change jmeter parameters\n\nsed -i 's/RESOURCE_ID/$(PerfTestResourceId)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/CLIENT_ID/$(PerfTestClientId)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/CLIENT_SECRET/$(PerfTestClientSecret)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/RAMP_TIME/${{ parameters.RampUpTime }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n \nsed -i 's/DURATION/${{ parameters.Duration }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/LOOPS/${{ parameters.Loops }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/THREADS/${{ parameters.Threads }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n"

      - task: PowerShell@2
        displayName: Run Performance in Region1
        inputs:
          targetType: filePath
          filePath: ./JMeterAKSPipeline/ExecuteInAKS.ps1
          arguments: '-AKSClusterName $(AKSClusterNameRegion1) -ResourceGroup $(AKSResourceGroup) -SPNClientId $(AKSSPNClientId) -SPNClientSecret $(AKSSPNClientSecretRegion1) -TenantId $(TenantId) -Namespace $(Namespace) -JMeterFolderPath ${{ parameters.JmeterFolderPath }} -JMeterFileName ${{ parameters.JmeterFileName }} -CSVFileNames "$(CSVFileNames)"'
          pwsh: true

      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact
        continueOnError: True
        inputs:
          path: ${{ parameters.JmeterFolderPath }}/$(AKSClusterNameRegion2)
          artifactName: Results-Region1-${{ parameters.Threads }}-${{ parameters.Duration }}

  - ${{ if eq(parameters.IsMultiRegionEnabled, true) }}:
      - job: Region_2
        displayName: Performance Agent Instance 2

        steps:
          - checkout: self

          - task: AzureKeyVault@1
            displayName: Get Keyvault Secrets
            inputs:
              azureSubscription: $(ServiceConnection)
              KeyVaultName: $(KeyVaultName)
              SecretsFilter: $(SecretNames)
              RunAsPreJob: true

          - task: PowerShell@2
            displayName: Create AKS Cluster
            inputs:
              targetType: filePath
              filePath: ./JMeterAKSPipeline/CreateAksCluster.ps1
              arguments: "-AKSClusterName $(AKSClusterNameRegion1)"
            condition: "and(succeeded(), eq('${{ parameters.IsClusterRequired }}', true))"

          - task: PowerShell@2
            displayName: Update Performance parameters
            inputs:
              targetType: inline
              script: "# Change jmeter parameters\n\nsed -i 's/RESOURCE_ID/$(PerfTestResourceId)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/CLIENT_ID/$(PerfTestClientId)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/CLIENT_SECRET/$(PerfTestClientSecret)/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/RAMP_TIME/${{ parameters.RampUpTime }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n \nsed -i 's/DURATION/${{ parameters.Duration }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/LOOPS/${{ parameters.Loops }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n\nsed -i 's/THREADS/${{ parameters.Threads }}/g' ${{ parameters.JmeterFolderPath }}/${{ parameters.JmeterFileName }}\n"

          - task: PowerShell@2
            displayName: Run Performance in Region2
            inputs:
              targetType: filePath
              filePath: ./JMeterAKSPipeline/ExecuteInAKS.ps1
              arguments: '-AKSClusterName $(AKSClusterNameRegion2) -ResourceGroup $(AKSResourceGroup) -SPNClientId $(AKSSPNClientId) -SPNClientSecret $(AKSSPNClientSecretRegion2) -TenantId $(TenantId) -Namespace $(Namespace) -JMeterFolderPath ${{ parameters.JmeterFolderPath }} -JMeterFileName ${{ parameters.JmeterFileName }} -CSVFileNames "$(CSVFileNames)"'
              pwsh: true

          - task: PublishPipelineArtifact@1
            displayName: Publish Pipeline Artifact
            continueOnError: True
            inputs:
              path: ${{ parameters.JmeterFolderPath }}/$(AKSClusterNameRegion2)
              artifactName: Results-Region2-${{ parameters.Threads }}-${{ parameters.Duration }}
